[
    {
        "id": "11e13958.ea4327",
        "type": "tab",
        "label": "Epson Robot Dashboard Sample",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4ccfc42a.91565c",
        "type": "ui_template",
        "z": "11e13958.ea4327",
        "group": "1f8dedbf.3f9432",
        "name": "",
        "order": 3,
        "width": 24,
        "height": 16,
        "format": "<div layout=\"column\" layout-margin layout-padding ng-cloak>\n    <div md-whiteframe ng-repeat=\"item in msg.payload\">\n        <!-- Controller -->\n        <div layout=\"row\" layout-padding>\n            <div>\n                <h3 lang=\"{{item.locale}}\">{{item.controller.name ? item.controller.name : item.controller.network.host}}</h3>\n                <h4>\n                    <span>{{item.controller.model}} &lt;{{item.controller.serial}}&gt;</span>\n                    <span ng-class=\"item.controller.status.phase === 'Running' ? 'is-running' : (item.controller.status.phase === 'Paused' ? 'is-paused' : 'is-ready')\">\n                        <i class=\"fa\" ng-class=\"item.controller.status.phase === 'Running' ? 'fa-play-circle' : (item.controller.status.phase === 'Paused' ? 'fa-pause-circle' : 'fa-stop-circle')\"></i>\n                        <span>{{item.controller.status.phase}}</span>\n                    </span>\n                </h4>\n\n                <div layout=\"row\" layout-padding layout-wrap>\n                    <div layout=\"column\" title=\"Firmware\"><ng-md-icon icon=\"memory\"></ng-md-icon></div>\n                    <div layout=\"column\">{{item.controller.firmware}}</div>\n                </div>\n                <div layout=\"row\" layout-padding layout-wrap>\n                    <div layout=\"column\" title=\"Host\"><ng-md-icon icon=\"settings_ethernet\"></ng-md-icon></div>\n                    <div layout=\"column\">{{item.controller.network.address}}:{{item.controller.network.port}}</div>\n                </div>\n                <div layout=\"row\" layout-padding layout-wrap>\n                    <div layout=\"column\" title=\"Project\"><ng-md-icon icon=\"folder_open\"></ng-md-icon></div>\n                    <div layout=\"column\">{{item.controller.project.name}}</div>\n                </div>\n                <div layout=\"row\" layout-padding layout-wrap>\n                    <div layout=\"column\" title=\"Control Device\"><ng-md-icon icon=\"devices\"></ng-md-icon></div>\n                    <div layout=\"column\">{{item.controller.controlledBy}}</div>\n                </div>\n                <p style=\"color:lightgray !important;\">\n                    <span ng-class=\"item.controller.status.signal.emergencyStop ? 'text-danger' : 'text-disabled'\">EStop</span> |\n                    <span ng-class=\"item.controller.status.signal.safeguard ? 'text-danger' : 'text-disabled'\">Safety</span> |\n                    <span ng-class=\"item.controller.status.signal.error ? 'text-danger' : 'text-disabled'\">Error</span> |\n                    <span ng-class=\"item.controller.status.signal.warning ? 'text-warning' : 'text-disabled'\">Warning</span> |\n                    <span ng-class=\"item.controller.preferences.dryRun ? 'text-info' : 'text-disabled'\">Dry Run</span>\n                </p>\n                <p ng-if=\"item.controller.status.errMsg\" style=\"font-weight:bold;\" lang=\"{{item.locale}}\">[{{item.controller.status.errCode}}] {{item.controller.status.errMsg}}</p>\n                <p ng-if=\"!item.controller.firmware\" style=\"color:blue !important;\"><i class=\"fa fa-info-circle\"></i> Newer firmware is available.</p>\n            </div>\n        </div>\n        <!-- Connected Robots -->\n        <div layout=\"row\" layout-margin layout-padding layout-wrap>\n            <div md-whiteframe flex=\"20\" ng-repeat=\"robot in item.robots\" ng-click=\"\" ng-class=\"robot.number === item.controller.status.currentRobot ? 'is-current-robot' : ''\">\n                <div>\n                    <img ng-src=\"/resources/@epson-robots/node-red-contrib-epson-robot/{{robot.series}}.jpg\" alt=\"{{robot.series}}\" style=\"width:100px;\">\n                </div>\n                <h3 lang=\"{{item.locale}}\">[{{robot.number}}] {{robot.name}}</h3>\n                <p>{{robot.model}} &lt;{{robot.serial}}&gt;</p>\n                <div layout=\"row\">\n                    <p>Motor: <span ng-class=\"robot.status.motorExcitation ? 'label-warning' : 'label-safe'\">{{robot.status.motorExcitation ? 'On' : 'Off'}}</span></p>\n                    <p>Power: <span ng-class=\"robot.status.powerHigh ? 'label-warning' : 'label-safe'\">{{robot.status.powerHigh ? 'High' : 'Low'}}</span></p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n    .is-running {\n        color: blue;\n    }\n    .is-paused {\n        color: blue;\n        animation: flash 2s infinite;\n    }\n    @keyframes flash {\n        50% {\n            color: lightgrey;\n        }\n    }\n    .is-ready {\n        color: grey;\n    }\n    .is-current-robot {\n        border: 2px solid blue;\n    }\n    .text-disabled {\n        color: lightgray;\n        font-weight: normal;\n    }\n    .text-danger {\n        color: red;\n        font-weight: bold;\n    }\n    .text-warning {\n        color: orange;\n        font-weight: bold;\n    }\n    .text-info {\n        color: blue;\n        font-weight: normal;\n    }\n    .label-danger {\n        font-weight: bold;\n        color: white;\n        background-color: red;\n        border-radius: 3px;\n        padding: 0 4px;\n    }\n    .label-warning {\n        font-weight: bold;\n        color: black;\n        background-color: yellow;\n        border-radius: 3px;\n        padding: 0 4px;\n    }\n    .label-safe {\n        font-weight: bold;\n        color: white;\n        background-color: limegreen;\n        border-radius: 3px;\n        padding: 0 4px;\n    }\n    :lang(zh-CN) {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', 'Heiti SC Light', 'Microsoft YaHei', '微软雅黑', Hei, SimHei, sans-serif;\n    }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d0624088.6425f",
        "type": "debug",
        "z": "11e13958.ea4327",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 160,
        "wires": []
    },
    {
        "id": "1053e51a.ec0bcb",
        "type": "comment",
        "z": "11e13958.ea4327",
        "name": "README",
        "info": "This sample flow is an example to visualize status data of epson robots and its controller. \n\nWe recommend to use this on Node-RED 1.3 or later.\n\n## Usage\n\nBefore using, please make sure that the \"Use only for monitoring\" setting of target controller is enabled. For further detailes, please refer to `README.md`.\n\nAlso, this flow depends on `node-red-dashboard`. Please install it if not installed.\n\n1. Open the edit dialog of `status-monitor` node.\n2. Enter controller's IP address (or hostname) on \"Host\" field. Also, edit other fields if necessary.\n3. Deploy the flow then open the dashboard page.\n4. Toggle the switch on dashboard page to ON.\n\n## Note\n\nBasically, collected data is visualized via the html template coded on `ui_template` node of `node-red-dashboard`.\n\nThe template code can accept an array of output data from the `status-monitor` node. This means it can also accept arrayed data generated from multiple `status-monitor` nodes. To try easily, you can use the `join` node.\n\n## Disclaimer\n\nIt is provided \"as-is\" with no assurance or guarantee, and is not aimed for stable operation on real manufacturing environment.\n\n## Copyright\n\n&copy; Seiko Epson Corporation.",
        "x": 80,
        "y": 40,
        "wires": []
    },
    {
        "id": "1335f1a6.f5325e",
        "type": "status-monitor",
        "z": "11e13958.ea4327",
        "name": "",
        "host": "",
        "port": 5000,
        "terminator": "CRLF",
        "locale": "en",
        "interval": "2",
        "startOfOperation": "idle",
        "x": 270,
        "y": 80,
        "wires": [
            [
                "d0624088.6425f",
                "6495dbc0.f4c0f4"
            ]
        ]
    },
    {
        "id": "23ab3881.cfe958",
        "type": "ui_switch",
        "z": "11e13958.ea4327",
        "name": "",
        "label": "Data Collection",
        "tooltip": "",
        "group": "1f8dedbf.3f9432",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 100,
        "y": 80,
        "wires": [
            [
                "1335f1a6.f5325e"
            ]
        ]
    },
    {
        "id": "a7120a5a.b48528",
        "type": "function",
        "z": "11e13958.ea4327",
        "name": "convert to array",
        "func": "msg.payload = [msg.payload];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 80,
        "wires": [
            [
                "4ccfc42a.91565c"
            ]
        ]
    },
    {
        "id": "6495dbc0.f4c0f4",
        "type": "rbe",
        "z": "11e13958.ea4327",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "a7120a5a.b48528"
            ]
        ]
    },
    {
        "id": "1f8dedbf.3f9432",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "1be7c85d.5ea8c8",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "1be7c85d.5ea8c8",
        "type": "ui_tab",
        "name": "Controllers & Robots",
        "icon": "dns",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]